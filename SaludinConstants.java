/* Generated By:JavaCC: Do not edit this line. SaludinConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SaludinConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SUMA = 5;
  /** RegularExpression Id. */
  int RESTA = 6;
  /** RegularExpression Id. */
  int MULTIPLICACION = 7;
  /** RegularExpression Id. */
  int DIVISION = 8;
  /** RegularExpression Id. */
  int ASIGNACION = 9;
  /** RegularExpression Id. */
  int Y = 10;
  /** RegularExpression Id. */
  int O = 11;
  /** RegularExpression Id. */
  int NO = 12;
  /** RegularExpression Id. */
  int IGUAL = 13;
  /** RegularExpression Id. */
  int DIFERENTE = 14;
  /** RegularExpression Id. */
  int MAYOR_QUE = 15;
  /** RegularExpression Id. */
  int MENOR_QUE = 16;
  /** RegularExpression Id. */
  int MAYOR_O_IGUAL_QUE = 17;
  /** RegularExpression Id. */
  int MENOR_O_IGUAL_QUE = 18;
  /** RegularExpression Id. */
  int SI = 19;
  /** RegularExpression Id. */
  int ENTONCES = 20;
  /** RegularExpression Id. */
  int SINO = 21;
  /** RegularExpression Id. */
  int MIENTRAS = 22;
  /** RegularExpression Id. */
  int HACER = 23;
  /** RegularExpression Id. */
  int PARA = 24;
  /** RegularExpression Id. */
  int HASTA = 25;
  /** RegularExpression Id. */
  int LEER = 26;
  /** RegularExpression Id. */
  int ESCRIBIR = 27;
  /** RegularExpression Id. */
  int ROMPER = 28;
  /** RegularExpression Id. */
  int ENTERO = 29;
  /** RegularExpression Id. */
  int REAL = 30;
  /** RegularExpression Id. */
  int CARACTER = 31;
  /** RegularExpression Id. */
  int CAD = 32;
  /** RegularExpression Id. */
  int BOOLEANO = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int FALSE = 35;
  /** RegularExpression Id. */
  int ARR = 36;
  /** RegularExpression Id. */
  int MATRIZ = 37;
  /** RegularExpression Id. */
  int DEF = 38;
  /** RegularExpression Id. */
  int DOS_PUNTOS = 39;
  /** RegularExpression Id. */
  int CORCHETE_ABRE = 40;
  /** RegularExpression Id. */
  int CORCHETE_CIERRA = 41;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 42;
  /** RegularExpression Id. */
  int LETRA = 43;
  /** RegularExpression Id. */
  int DIGITO = 44;
  /** RegularExpression Id. */
  int NUMERO = 45;
  /** RegularExpression Id. */
  int CADENA = 46;
  /** RegularExpression Id. */
  int CARACTERES = 47;
  /** RegularExpression Id. */
  int PUNTO_Y_COMA = 48;
  /** RegularExpression Id. */
  int PARENTESIS_ABRE = 49;
  /** RegularExpression Id. */
  int PARENTESIS_CIERRA = 50;
  /** RegularExpression Id. */
  int ABRIR_LLAVE = 51;
  /** RegularExpression Id. */
  int CERRAR_LLAVE = 52;
  /** RegularExpression Id. */
  int COMA = 53;
  /** RegularExpression Id. */
  int ERROR_TOKEN = 54;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"Y\"",
    "\"O\"",
    "\"NO\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"until\"",
    "\"leer\"",
    "\"escribir\"",
    "\"break\"",
    "\"ent\"",
    "\"real\"",
    "\"car\"",
    "\"cad\"",
    "\"bool\"",
    "\"verdadero\"",
    "\"falso\"",
    "\"arr\"",
    "\"matriz\"",
    "\"def\"",
    "\":\"",
    "\"[\"",
    "\"]\"",
    "<IDENTIFICADOR>",
    "<LETRA>",
    "<DIGITO>",
    "<NUMERO>",
    "<CADENA>",
    "<CARACTERES>",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "<ERROR_TOKEN>",
  };

}
